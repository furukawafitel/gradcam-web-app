{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Grad-CAM App &amp; API","text":""},{"location":"#the-grad-cam","title":"The Grad-CAM","text":"<p>Gradient Class Activation Maps(Grad-CAM) are a visualization technique for deep learning networks.</p> <p>See the paper: Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization </p> <p>Grad-CAM visualizations of the model predictions (see the red regions in the middle column) revealed that the model had learned to look at the person\u2019s face / hairstyle to distinguish nurses from doctors, thus learning a gender stereotype. Indeed, the model was misclassifying several female doctors to be a nurse and male nurses to be a doctor. Clearly, this is problematic. Turns out the image search results were gender-biased</p>"},{"location":"#grad-cam-in-fitel-smart","title":"Grad-CAM in Fitel Smart","text":"<p>Fitel Smart App: fitelsmart-gradcam-app  is provide to visulize where AI model is focussing, </p>"},{"location":"#insert-your-model","title":"Insert your model","text":"<p>You can upload your .h5 model.</p> <p></p> <p>Then upload your image file.</p> <p></p>"},{"location":"#demo-model","title":"Demo model","text":"<p>You can select demo model by click the \"Get Model for demo\" checkbox.</p> <p></p>"},{"location":"#site-reference","title":"Site Reference","text":"<p>Fitel Smart App: fitelsmart-gradcam-app </p> <p>API Tester (Swagger) : fitelsmart-gradcam-api Swagger</p> <p>API documentation (Redoc) : fitelsmart-gradcam-api Redoc</p>"},{"location":"api/","title":"API Call","text":""},{"location":"api/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"api/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"api/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"api/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"}]}